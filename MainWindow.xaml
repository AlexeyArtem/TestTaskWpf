<Window x:Class="TestTaskWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestTaskWpf" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        x:Name="Window"
        DataContext="{StaticResource MainViewModel}"
        Title="MainWindow" Height="468.352" Width="968.855" WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger SourceName="TreeViewData" EventName="SelectedItemChanged">
            <i:InvokeCommandAction Command="{Binding ShowCompanyEditorCommand}" CommandParameter="{Binding ElementName=TreeViewData, Path=SelectedItem}"/>
            <i:InvokeCommandAction Command="{Binding ShowDepartmentEditorCommand}" CommandParameter="{Binding ElementName=TreeViewData, Path=SelectedItem}"/>
            <i:InvokeCommandAction Command="{Binding ShowEmployeeEditorCommand}" CommandParameter="{Binding ElementName=TreeViewData, Path=SelectedItem}"/>
        </i:EventTrigger>
        <i:EventTrigger SourceName="ButtonDelData" EventName="Click">
            <i:InvokeCommandAction Command="{Binding CompaniesViewModel.RemoveItemCommand}" CommandParameter="{Binding ElementName=TreeViewData, Path=SelectedItem}"/>
            <i:InvokeCommandAction Command="{Binding DepartmentsViewModel.RemoveItemCommand}" CommandParameter="{Binding ElementName=TreeViewData, Path=SelectedItem}"/>
            <i:InvokeCommandAction Command="{Binding EmployeesViewModel.RemoveItemCommand}" CommandParameter="{Binding ElementName=TreeViewData, Path=SelectedItem}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <TabControl>
        <TabItem Header="Информация">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox Header="Данные" Margin="0, 0, 5, 0" Grid.Column="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="0.1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TreeView x:Name="TreeViewData" Margin="5" ItemsSource="{Binding CompaniesViewModel.CollectionView}">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:Company}" ItemsSource="{Binding Departments}">
                                    <TreeViewItem x:Name="TreeViewItemCompany" Header="{Binding Title}"></TreeViewItem>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:Department}" ItemsSource="{Binding Employees}">
                                    <TreeViewItem Header="{Binding Title}"></TreeViewItem>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:Employee}">
                                    <TreeViewItem Header="{Binding Surname}"></TreeViewItem>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                        <StackPanel Grid.Column="1">
                            <Button x:Name="ButtonAddData" Click="ButtonAddData_Click" Margin="0, 5, 5, 0" Width="auto" Height="auto" VerticalAlignment="Top" Content="+">
                                <Button.ToolTip>
                                    <ToolTip>Добавить данные</ToolTip>
                                </Button.ToolTip>
                                <Button.ContextMenu>
                                    <ContextMenu x:Name="ContextMenuAddData">
                                        <MenuItem Header="Добавить компанию" Command="{Binding Source={StaticResource MainViewModel}, Path=ShowDialogCommand}" CommandParameter="AddCompanyDialog"></MenuItem>
                                        <MenuItem Header="Добавить подразделение" Command="{Binding Source={StaticResource MainViewModel}, Path=ShowDialogCommand}" CommandParameter="AddDepartmentDialog"></MenuItem>
                                        <MenuItem Header="Добавить сотрудника" Command="{Binding Source={StaticResource MainViewModel}, Path=ShowDialogCommand}" CommandParameter="AddEmployeeDialog"></MenuItem>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                            <Button x:Name="ButtonDelData" Click="ButtonDelData_Click" Margin="0, 5, 5, 0" Width="auto" Height="auto" VerticalAlignment="Top" Content="–">
                                <Button.ToolTip>
                                    <ToolTip>Удалить данные</ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </StackPanel>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Редактирование данных" Grid.Column="2" Margin="5, 0, 0, 0">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <ContentControl Margin="5" Content="{Binding CurrentViewModel}"></ContentControl>
                    </ScrollViewer>
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="Отчеты" x:Name="TabItemReports">
            <TabItem.Resources>
                <Style TargetType="DataGrid">
                    <Setter Property="Margin" Value="5"></Setter>
                    <Setter Property="IsReadOnly" Value="True"></Setter>
                    <Setter Property="AutoGenerateColumns" Value="False"></Setter>
                </Style>
                <CollectionViewSource x:Key="SalaryReportViewSource" Source="{Binding EmployeesViewModel.Collection}">
                    <CollectionViewSource.GroupDescriptions>
                        <PropertyGroupDescription PropertyName="Department.Company.Title"/>
                        <PropertyGroupDescription PropertyName="Department.Title"/>
                    </CollectionViewSource.GroupDescriptions>
                </CollectionViewSource>
                <local:EmployeeSalaryToTotalDepartmentConverter x:Key="EmployeesSalaryToTotalDepartment"></local:EmployeeSalaryToTotalDepartmentConverter>
                <local:DepartmentsSalaryToTotalCompanyConverter x:Key="DepartmentsSalaryToTotalCompany"></local:DepartmentsSalaryToTotalCompanyConverter>
                <local:DateToPeriodConverter x:Key="DateToPeriod"></local:DateToPeriodConverter>
                <ObjectDataProvider x:Key="EnumTypeAgeDataSource" ObjectType="{x:Type local:TypeAge}" MethodName="GetValues">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="local:TypeAge"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <local:TypeAgeEnumToString x:Key="TypeAgeEnumToString"></local:TypeAgeEnumToString>
            </TabItem.Resources>
            <UniformGrid Columns="2" Rows="0">
                <GroupBox Header="Ведомость по зарплате">
                    <DataGrid ItemsSource="{Binding Source={StaticResource ResourceKey=SalaryReportViewSource}}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="115" Header="Фамилия" Binding="{Binding Surname}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Зарплата" Binding="{Binding Salary}"></DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyle>
                                    <Style TargetType="{x:Type GroupItem}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                    <Expander IsExpanded="True">
                                                        <Expander.Header>
                                                            <DockPanel>
                                                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                                                <TextBlock FontWeight="Bold" Text="{Binding Path=Items, Converter={StaticResource DepartmentsSalaryToTotalCompany}}"/>
                                                            </DockPanel>
                                                        </Expander.Header>
                                                        <Expander.Content>
                                                            <ItemsPresenter/>
                                                        </Expander.Content>
                                                    </Expander>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.ContainerStyle>
                            </GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <DockPanel Background="LightBlue">
                                            <TextBlock Text="{Binding Path=Name}" Margin="30,0,0,0" Width="100"/>
                                            <TextBlock Text="{Binding Path=Items, Converter={StaticResource EmployeesSalaryToTotalDepartment}}"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </DataGrid.GroupStyle>
                    </DataGrid>
                </GroupBox>
                <GroupBox Header="Список сотрудников">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1.5*"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center">
                            <StackPanel Margin="2, 0">
                                <Label>Компания:</Label>
                                <ComboBox MinWidth="80" SelectedItem="{Binding EmployeesViewModel.CompanyFilter, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding CompaniesViewModel.Collection}" DisplayMemberPath="Title"></ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2, 0">
                                <Label>Стаж:</Label>
                                <ComboBox MinWidth="80" x:Name="ComboBoxExperinceEmployee" SelectedItem="{Binding EmployeesViewModel.ExperienceFilter, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding ElementName=Window, Path=YearsExperience}"></ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2, 0">
                                <Label>Тип:</Label>
                                <ComboBox x:Name="ComboBoxTypeAge" MinWidth="80" ItemsSource="{Binding Source={StaticResource EnumTypeAgeDataSource}}" SelectedIndex="0" SelectedValue="{Binding Path=EmployeesViewModel.TypeAgeFilter, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=., Converter={StaticResource TypeAgeEnumToString}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="2, 0">
                                <Label>Значение:</Label>
                                <ComboBox MinWidth="80">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ComboBoxTypeAge, Path=SelectedValue}" Value="NumberYears">
                                                    <Setter Property="ItemsSource" Value="{Binding ElementName=Window, Path=Ages}"></Setter>
                                                    <Setter Property="SelectedItem" Value="{Binding EmployeesViewModel.AgeFilter}"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=ComboBoxTypeAge, Path=SelectedValue}" Value="BirthYears">
                                                    <Setter Property="ItemsSource" Value="{Binding ElementName=Window, Path=BirthYears}"></Setter>
                                                    <Setter Property="SelectedItem" Value="{Binding EmployeesViewModel.BirthYearFilter}"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                            </StackPanel>
                            <Button MinWidth="80" Height="22" Content="Сброс" Margin="2, 24, 2, 0" Command="{Binding EmployeesViewModel.ResetFiltersCommand}"/>
                        </StackPanel>
                        <DataGrid Grid.Row="1" ItemsSource="{Binding EmployeesViewModel.CollectionView}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Компания" Binding="{Binding Department.Company.Title}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Возраст" Binding="{Binding BirthDate, Converter={StaticResource DateToPeriod}}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Подразделение" Binding="{Binding Department.Title}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Стаж" Binding="{Binding EmploymentDate, Converter={StaticResource DateToPeriod}}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </GroupBox>
            </UniformGrid>
        </TabItem>
    </TabControl>
</Window>
